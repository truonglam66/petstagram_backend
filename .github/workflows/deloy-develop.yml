name: Build and deloy develop

on:
  push:
    branches: [develop]

env:
  ECR_REPOSITORY: petstagram_backend

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest #${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    # - name: Update kubeconfig dkm hahaha dmmmmmmm
    #   run: |
    #     aws eks update-kubeconfig --name ${{ secrets.AWS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
    # # kubectl config use-context ${{ secrets.AWS_KUBE_CONTEXT }}

    # - name: Set the KUBE_CONFIG
    #   id: step_one
    #   run: |
    #     echo 'KUBE_CONFIG=$(base64 < ${HOME}/.kube/config)' >> $GITHUB_ENV

    # export kube_config=$(cat ${HOME}/.kube/config | base64)
    # cat ${HOME}/.kube/config | base64

    # - name: Deploy to Kubernetes
    #   run: |
    #     kubectl apply -f deployment.yaml
    # - name: deploy to cluster
    #   uses: kodermax/kubectl-aws-eks@master
    #   env:
    #     KUBE_CONFIG_DATA: $KUBE_CONFIG
    #   with:
    #     args: apply -f deployment.yaml
    # - name: Trigger deploy
    #   uses: Consensys/kubernetes-action@master
    #   env:
    #     KUBE_CONFIG_DATA: $KUBE_CONFIG
    #   with:
    #     args: apply -f deployment.yaml
